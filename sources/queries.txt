select distinct t1.*, country from (select city, state, count(id) as cnt from scrapeddata
where state <> 'NULL'
group by city, state
order by cnt desc) as t1 LEFT JOIN locations
ON lower(t1.city)=lower(locations.city) and lower(t1.state)=lower(locations.state)
order by cnt desc



select temp.*, l.country from (select distinct city, state, COUNT(id) as cnt from scrapeddata where state <> 'NULL' group by city, state) temp left join (select distinct state, country from locations) l
on lower(l.state)=lower(temp.state)
where country = 'US'
order by temp.cnt desc

select sd.*, f.country from scrapeddata sd join (
select temp.*, l.country from (select distinct city, state from scrapeddata where state <> 'NULL') temp left join (select distinct state, country from locations) l
on lower(l.state)=lower(temp.state)
where country = 'US') as f
on lower(sd.state) = lower(f.state) and lower(sd.city) = lower(f.city)
order by sd.city

select lat, lon, COUNT(DISTINCT lower(city)) as cnt from locations
where locationtype='PRIMARY'
group by lat, lon
having COUNT(DISTINCT lower(city))>1
order by cnt desc




select distinct s.city, s.state from scrapeddata s join (

select distinct city, state from locations
where locationtype='PRIMARY'
group by city, state
having MAX(lat)-MIN(lat)> 0.2 or MAX(lon)-MIN(lon)>0.2) t
on lower(s.city)=lower(t.city) and lower(s.state)=lower(t.state) 
order by city,state

select distinct regexp_replace(regexp_replace(city, '\(.*\)', ''), '/.*', '') as city, state from scrapeddata
where state in (select distinct code from states)
order by city

select distinct city, state, AVG(lat) as lat, AVG(lon) as lon from locations
where locationtype='PRIMARY'
group by city, state
having MAX(lat)-MIN(lat)< 0.2 or MAX(lon)-MIN(lon)<0.2
order by city, state

--select to_timestamp(date_time, 'MM/DD/YY HH24:MI') from scrapeddata

SELECT regexp_matches(date_time, '\d{1,2}/\d{1,2}/\d{1,2} \d{1,2}:\d{1,2}') from (select * from scrapeddata where state in (select distinct code from states)) f


##created locations_garbage from locations

insert into locations_garbage(name, lat, lon, state)
select DISTINCT lower(l.city), l.lat, l.lon, l.state from (select lat, lon, COUNT(DISTINCT lower(city)) as cnt from locations
where locationtype='PRIMARY'
and state = ANY ('{AK,AL,AR,AZ,CA,CO,CT,DE,FL,GA,HI,IA,ID,IL,IN,KS,KY,LA,MA,MD,ME,MI,MN,MO,MS,MT,NC,ND,NE,NH,NJ,NM,NV,NY,OH,OK,OR,PA,RI,SC,SD,TN,TX,UT,VA,VT,WA,WI,WV,WY}'::text[])
group by lat, lon
having COUNT(DISTINCT lower(city)) > 1
order by cnt desc
) dt, locations as l
where dt.lat=l.lat and dt.lon=l.lon and l.locationtype='PRIMARY'


select s.date_time, s.city, s.state, t.lat, t.lon from (

select distinct date_time, regexp_replace(regexp_replace(city, '\(.*\)', ''), '/.*', '') as city, state from scrapeddata
where state in (select distinct code from states)

) s join (select distinct city, state, AVG(lat) as lat, AVG(lon) as lon from locations

group by city, state
order by city, state) t
on lower(s.city)=lower(t.city) and lower(s.state)=lower(t.state) 


##created locations_cleaned from locations

insert into locations_cleaned(name, lat, lon, state)
select DISTINCT lower(l.city), l.lat, l.lon, l.state from (select lat, lon, COUNT(DISTINCT lower(city)) as cnt from locations
where locationtype='PRIMARY'
and state = ANY ('{AK,AL,AR,AZ,CA,CO,CT,DE,FL,GA,HI,IA,ID,IL,IN,KS,KY,LA,MA,MD,ME,MI,MN,MO,MS,MT,NC,ND,NE,NH,NJ,NM,NV,NY,OH,OK,OR,PA,RI,SC,SD,TN,TX,UT,VA,VT,WA,WI,WV,WY}'::text[])
group by lat, lon
having COUNT(DISTINCT lower(city)) = 1
order by cnt desc
) dt, locations as l
where dt.lat=l.lat and dt.lon=l.lon and l.locationtype='PRIMARY'


## created airports_cleaned from airports:

INSERT INTO airports_cleaned (name, lat, lon)
SELECT DISTINCT lower(a.name), a.latitude, a.longitude FROM airports as a
where country='United States'
